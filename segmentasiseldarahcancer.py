# -*- coding: utf-8 -*-
"""SegmentasiSelDarahCancer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14asN3d1zHWOIHylpRomBmii3hsGmtTuM
"""

!pip install tensorflow numpy matplotlib

from google.colab import drive
drive.mount('/content/drive')

import os
import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab import drive
from tensorflow.keras.preprocessing.image import load_img, img_to_array

# load dataset yang ada di Gdrive
dataset_path = '/content/drive/MyDrive/Smt_4/Pengenalan_pola/KlasifikasiSelDarah/images'

# load images
def load_images_from_folder(folder):
    images = []
    filenames = []
    for filename in os.listdir(folder):
        img = cv2.imread(os.path.join(folder, filename))
        if img is not None:
            images.append(img)
            filenames.append(filename)
    return images, filenames

# Load dataset
images, filenames = load_images_from_folder(dataset_path)

# Preprocessing function
def preprocess_image(image):
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)  # Convert to grayscale
    blur = cv2.GaussianBlur(gray, (5, 5), 0)  # Apply Gaussian Blur
    _, thresh = cv2.threshold(blur, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)  # Otsu's Thresholding
    return thresh

# Perform segmentation
segmented_images = [preprocess_image(img) for img in images]

# Display results
fig, axes = plt.subplots(len(images), 2, figsize=(10, 5 * len(images)))
for i in range(len(images)):
    axes[i, 0].imshow(cv2.cvtColor(images[i], cv2.COLOR_BGR2RGB))
    axes[i, 0].set_title(f"Original: {filenames[i]}")
    axes[i, 0].axis("off")

    axes[i, 1].imshow(segmented_images[i], cmap="gray")
    axes[i, 1].set_title("Segmented")
    axes[i, 1].axis("off")

plt.show()